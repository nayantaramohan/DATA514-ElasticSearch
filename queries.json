# ---------------------------------------------------
#                 INTRODUCTION
# ---------------------------------------------------

#Seeing all indices that exists in our space
GET _cat/indices

# Viewing the netflix index
# Equivalent of SELECT * FROM netflix

GET netflix/_search
{
  "query": {
    "match_all": {}
  }
}


# Opening a particular document
GET netflix/_doc/LQNHO4EBSwXPRGhyEd7g


# Generic structure of writing a query in ES

# Transforming the below SQL query into ES query

# SELECT "title, "release_year", "duration", "ration", "director"
# FROM netflix
# LIMIT 10

GET netflix/_search
{
  "_source": ["title", "release_year", "duration", "rating", "director"],
  "size": 10
}


# We can also add bool operations to fine tune our search.
# MUST stands for AND operator
# FILTER stands for filtering
# SHOULD stands for OR operator
# MUST NOT stands for NOT operator
# SIZE stands for document LIMIT displayed

# ---------------------------------------------------
#                 QUERIES
# ---------------------------------------------------

# Query 1: Matching
# From the Netflix dataset, display the title, release year and the rating for movies which have the words "Nazi" OR "Camps" but NOT "deaths" in the title. Sort the responses in the descending order of release year.

GET netflix/_search
{
  "_source": ["title", "release_year", "rating"],
  "sort": [
    {
      "release_year": {
        "order": "desc"
      }
    }
    ],
  "query": {
    "bool": {
      "should": [
        {
          "match": {
            "title": "Nazi"
          }
        }
        ,
        {
          "match": {
            "title": "Camps"
          }
        }
      ],
      "must_not":{
        "match":{
          "title": "Death"
        }

      }
    }
  }
}

# ---------------------------------------------------
# Query 2: Nested Boolean
# Display the title of all the movies in the Netflix dataset where the title contains the word "Nazi" OR "King" and DOES NOT contain the words "Girl" OR "Boys". Sort them in the ascending order of year.

GET netflix/_search
{
  "_source": ["title"],
   "sort": [
    {
      "release_year": {
        "order": "asc"
      }
    }
  ],
  "query": {
    "bool":{
      "should": [{
        "match": {
          "title": "King"
        }
      },
      {
        "match": {
          "title": "Nazi"
        }
      }
      ],
      "must_not": [{
        "bool": {
          "should": [
            {
              "match": {
                "title": "Girl"
              }
            },
              {
                "match":{
                  "title": "Boys"
                }
              }
          ]
        }
      }
        ]
    }
  }
}
